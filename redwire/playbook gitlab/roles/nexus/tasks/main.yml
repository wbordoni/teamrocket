---
- name: Install wget
  yum: name=wget state=installed

- name: Install createrepo for nexus-yum-repository-plugin
  yum: name=createrepo state=installed

- name: Create Nexus group
  group: name={{ nexus_os_group }} state=present
  become: true

- name: Create Nexus user
  user: name={{ nexus_os_user }} group={{ nexus_os_group }} shell={{ nexus_os_user_shell }} state=present
  become: true

- name: Create Nexus installation directory
  file:
    path={{ nexus_installation_dir }}
    state=directory
  become: true

- name: Download Nexus package
  get_url: url= "http://download.sonatype.com/nexus/oss/{{ nexus_package }}" dest={{ nexus_download_dir }}/{{ nexus_package }}
  become: false

- name: Unpack Nexus package
  unarchive:
    src={{ nexus_download_dir }}/{{ nexus_package }}
    dest={{ nexus_installation_dir }}
    creates={{ nexus_installation_dir }}/nexus-{{ nexus_version }}
    force=no
    copy=false
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    mode=0755

- name: Create symlink nexus-latest
  file:
    src={{ nexus_installation_dir }}/nexus-{{ nexus_version }}
    dest={{ nexus_installation_dir }}/nexus-latest
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    state=link

- name: Check if sonatype working directory exists
  stat: path={{ nexus_installation_dir }}/sonatype-work
  register: s_w

- name: Move existing sonatype working directory into specified working dir
  command: mv {{ nexus_installation_dir }}/sonatype-work {{ nexus_working_dir }}
  when: s_w.stat.exists

- name: Set permissions and ownership on Nexus installation directory
  file:
    path={{ nexus_installation_dir }}/{{ nexus_package }}
    state=directory
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    mode=0755
    recurse=true

- name: Create Nexus directory for PID file
  file:
    path=/var/run/nexus
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    state=directory

- name: Configure port in nexus.properties
  lineinfile:
    dest={{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties
    line=application-port={{ nexus_port }}
    regexp=application-port=.*
    state=present
  notify:
    - 'restart nexus'

- name: Configure workdir in nexus.properties
  lineinfile:
    dest={{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties
    line=nexus-work={{ nexus_working_dir }}
    regexp=nexus-work=.*
    state=present
  notify:
    - 'restart nexus'

- name: Copy the /etc/init.d/nexus file
  template: src=init-nexus.j2 dest=/etc/init.d/nexus owner=root group=root mode=0755 backup=yes
  notify:
    - 'restart nexus'

- name: Register service with chkconfig system
  service: name=nexus enabled=yes

- name: Set service start/stop order
  become: true
  command: chkconfig nexus reset
